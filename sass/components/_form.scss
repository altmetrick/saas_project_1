.form {
  &__group {
  }
  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__input {
    font-family: inherit;
    color: inherit;
    font-size: 1.5rem;
    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: rgba($color-white, 0.5);
    border: none;

    //specify transparent border on not focused state to avoid 'jumping' on focused state
    border-bottom: 3px solid transparent;
    display: block;
    width: 90%;

    //using sudo element to style input's placeholder
    &::-webkit-input-placeholder {
      color: $color-grey-dark-2;
    }

    &:focus {
      outline: none;
      box-shadow: 0 1rem 2rem rgba($color-black, 0.1);
      border-bottom: 3px solid $color-primary;
    }

    &:focus:invalid {
      border-bottom: 3px solid orangered;
    }
  }

  &__label {
    display: block;
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: 0.7rem;

    transition: all 0.3s;
  }

  // when place holder of an input is shown, that means that the input is empty
  // using input:placeholder-shown we can manipulate visibility of input's label
  // so when input is empty (and placeholder is shown) we want to hide the label
  // and show it (label) when input is not empty
  // so in order to apply rules when input is empty we need to use the 'adjacent sibling combinator +'
  // to select the label

  &__input:placeholder-shown + &__label {
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4rem);
  }

  //Radio buttons

  //in order to style radio btn, we need to hide basic html radio-button and create our own
  &__radio-input {
    visibility: hidden;
  }

  &__radio-group {
    width: 49%;
    display: inline-block;
  }

  &__radio-label {
    font-size: $font-size-default;
    cursor: pointer;

    position: relative;
    padding-left: 4.5rem;
  }

  &__radio-button {
    display: inline-block;
    height: 3rem;
    width: 3rem;
    border: 5px solid $color-primary;
    border-radius: 50%;

    position: absolute;
    top: -0.4;
    left: 0;

    //use ::after sudo element to create an inner circle in our custom radio btn;
    &::after {
      content: '';
      display: block;

      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;
      background-color: $color-primary;

      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);

      opacity: 0;
      transition: all 0.2s;
    }
  }

  //in order to change opacity on 'form__radio-button::after' element
  // when a radio button 'form__radio-input' is checked
  // we need to select label(form____radio-label) with '~ general sibling combinator'
  // and then select its child 'form__radio-button::after'
  &__radio-input:checked ~ &__radio-label &__radio-button::after {
    opacity: 1;
  }
}
