.card {
  position: relative;

  //to see perspective on a rotating element, wee need to specify it on its parent element
  perspective: 150rem;
  -moz-perspective: 150rem;
  height: 52rem;

  &__side {
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;

    height: 52rem;
    transition: all 0.9s ease;

    //back-face - The back face of an element is a mirror image of the front face being displayed. This property is useful when an element is rotated
    backface-visibility: hidden;

    //as child image (.card__picture) overflows its parent, we won't be able to see border-radius: 5px, to avoid this use overflow: hidden on parent
    overflow: hidden;
    border-radius: 5px;

    box-shadow: 0 1.5rem 4rem rgba($color-black, 0.2);

    &--front {
      background-color: $color-white;
    }

    &--back {
      transform: rotateY(180deg);
      &-1 {
        background-image: linear-gradient(
          to right bottom,
          $color-secondary-light,
          $color-secondary-dark
        );
      }

      &-2 {
        background-image: linear-gradient(
          to right bottom,
          $color-primary-light,
          $color-primary-dark
        );
      }

      &-3 {
        background-image: linear-gradient(
          to right bottom,
          $color-tertiary-light,
          $color-tertiary-dark
        );
      }
    }
  }

  //to hover on a parent and animate only its child, use: .parent:hover .child{ rules here will apply only the child }
  //.card:hover .card__side {}
  &:hover &__side--front {
    transform: rotateY(-180deg);
  }

  &:hover &__side--back {
    transform: rotateY(0);
  }

  //Front side styling

  &__picture {
    height: 22rem;
    background-size: cover;
    background-position: center;
    //
    -webkit-background-blend-mode: screen;
    background-blend-mode: screen;

    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);

    border-top-left-radius: 5px;
    border-top-right-radius: 5px;

    &--1 {
      background-image: linear-gradient(
          to right bottom,
          rgba($color-secondary-light, 0.85),
          rgba($color-secondary-dark, 0.85)
        ),
        url(../../img/nat-5.jpg);
    }
    &--2 {
      background-image: linear-gradient(
          to right bottom,
          rgba($color-primary-light, 0.85),
          rgba($color-primary-dark, 0.85)
        ),
        url(../../img/nat-6.jpg);
    }
    &--3 {
      background-image: linear-gradient(
          to right bottom,
          rgba($color-tertiary-light, 0.85),
          rgba($color-tertiary-dark, 0.85)
        ),
        url(../../img/nat-7.jpg);
    }
  }
  &__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    color: $color-white;

    text-align: right;
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 75%;
  }

  &__heading-span {
    padding: 1rem 1.5rem;
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone;

    &--1 {
      background-image: linear-gradient(
        to right bottom,
        rgba($color-secondary-light, 0.85),
        rgba($color-secondary-dark, 0.85)
      );
    }

    &--2 {
      background-image: linear-gradient(
        to right bottom,
        rgba($color-primary-light, 0.85),
        rgba($color-primary-dark, 0.85)
      );
    }

    &--3 {
      background-image: linear-gradient(
        to right bottom,
        rgba($color-tertiary-light, 0.85),
        rgba($color-tertiary-dark, 0.85)
      );
    }
  }

  &__details {
    padding: 3rem;

    ul {
      width: 80%;
      margin: 0 auto;
      list-style: none;

      li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem;

        &:not(:last-child) {
          border-bottom: 1px solid $color-gray-light-2;
        }
      }
    }
  }

  //Back side styling

  &__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    width: 90%;
    text-align: center;
  }

  &__price-box {
    color: $color-white;
    text-align: center;
    margin-bottom: 8rem;
  }

  &__price-only {
    font-size: 2rem;
    text-transform: uppercase;
  }

  &__price-value {
    font-size: 6rem;
    font-weight: 100;
  }

  //When we need to change a lot of styles in media-queries it's a lot easier first
  // to copy and paste all existing styles in to a query and then delete styles that
  // we don't need and add new styles specific to a query

  @include respond(tab-port) {
    height: auto;
    background-color: $color-white;
    border-radius: 3px;
    box-shadow: 0 1.5rem 4rem rgba($color-black, 0.2);

    &__side {
      position: relative;
      height: auto;
      box-shadow: none;

      &--back {
        transform: rotateY(0deg);
        // margin-top: -6rem;
        clip-path: polygon(0 15%, 100% 0, 100% 100%, 0 100%);
        border-top-right-radius: 0px;
      }
    }

    &:hover &__side--front {
      transform: rotateY(0);
    }

    &__details {
      padding: 1rem 3rem;
    }

    //Back side styling
    &__cta {
      position: relative;
      top: 0;
      left: 0;
      transform: translate(0);
      width: 100%;
      padding: 7rem 4rem 4rem 4rem;
    }

    &__price-box {
      margin-bottom: 3rem;
    }

    &__price-only {
      font-size: 1.5rem;
    }

    &__price-value {
      font-size: 4rem;
      font-weight: 100;
    }
  }
}
